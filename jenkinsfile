pipeline {  
    agent any  

    environment {  
        VENV_DIR = 'venv'  
    }  

    stages {  
        stage('Checkout Repository') {  
            steps {  
                // Retrieve the code from the repository  
                git branch: 'main', url: 'https://github.com/Glindet/Projet_DevOps_DIT_M1.git'  
            }  
        }  

        stage('Setup') {  
            steps {  
                // Create a virtual environment  
                bat "python -m venv ${VENV_DIR}"  
                // Install dependencies  
                bat ".\\${VENV_DIR}\\Scripts\\pip install -r requirements.txt" // Ensure requirements.txt exists  
            }  
        }

        // New migration generation stage added here
        stage('Create Migrations') {
            steps {
                bat '.\\venv\\Scripts\\python manage.py makemigrations'
            }
        }


        stage('Run Migrations') {  
            steps {  
                // Apply database migrations  
                bat ".\\${VENV_DIR}\\Scripts\\python manage.py migrate"  
            }  
        }  

       

        stage('Notify') {  
            steps {  
                script {  
                    def result = currentBuild.result ?: 'SUCCESS'  
                    emailext subject: "Jenkins Build: ${result}",  
                        body: "Build Status: ${result}\nView Jenkins: ${env.BUILD_URL}",  
                        to: 'glindetolivier@gmail.com'  
                }  
            }  
        }  
    }  

    post {  
        failure {  
            emailext subject: "Jenkins Build Failed",  
                body: "Pipeline failure: ${env.BUILD_URL}",  
                to: 'glindetolivier@gmail.com'  
        }  
    }  
}  